version: 2

install_deps: &install_deps
  name: Install Dependencies
  command: |
    if [ ! -f "venv/bin/python" ]; then
      virtualenv venv
    fi
    . venv/bin/activate
    pip install -r requirements.txt
    pip install -r dev-requirements.txt
    pip install -r dev-requirements-extras.txt

run_tests: &run_tests
  name: Run Tests
  command: |
    . venv/bin/activate
    py.test -n 6

jobs:
  test-py36:
    docker:
      - image: flexget/cci-python:3.6
    environment:
      - VCR_RECORD_MODE=none
    steps:
      - checkout
      - restore_cache:
          keys:
          - py3.6-deps-{{ checksum "requirements.txt" }}{{ checksum "dev-requirements.txt" }}{{ checksum "dev-requirements-extras.txt" }}
          - py3.6-deps- # fallback to using the latest cache if no exact match is found
      - run: *install_deps
      - save_cache:
          paths:
            - ./venv
          key: py3.6-deps-{{ checksum "requirements.txt" }}{{ checksum "dev-requirements.txt" }}{{ checksum "dev-requirements-extras.txt" }}
      - run:
          name: Run Tests
          command: |
            . venv/bin/activate
            py.test --cov flexget --cov-report xml -n 6
      - run:
          name: Coverage to Codacy
          command: |
            .circleci/coverage.sh

  test-py37:
    docker:
      - image: flexget/cci-python:3.7
    environment:
      - VCR_RECORD_MODE=none
    steps:
      - checkout
      - restore_cache:
          keys:
          - py3.7-deps-{{ checksum "requirements.txt" }}{{ checksum "dev-requirements.txt" }}{{ checksum "dev-requirements-extras.txt" }}
          - py3.7-deps- # fallback to using the latest cache if no exact match is found
      - run: *install_deps
      - save_cache:
          paths:
            - ./venv
          key: py3.7-deps-{{ checksum "requirements.txt" }}{{ checksum "dev-requirements.txt" }}{{ checksum "dev-requirements-extras.txt" }}
      - run: *run_tests

  deploy:
    docker:
      - image: flexget/cci-python:3.6
    steps:
      - add-ssh-keys
      - run:
          name: Setup Git
          command: |
            git config --global user.email ${GIT_EMAIL}
            git config --global user.name ${GIT_USERNAME}
      - checkout
      - restore_cache:
          keys:
          - py3.5-deps-{{ checksum "dev-requirements.txt" }}
          - py3.5-deps- # fallback to using the latest cache if no exact match is found
      - run: *install_deps
      - save_cache:
          paths:
            - ./venv
          key: py3.5-deps-{{ checksum "dev-requirements.txt" }}
      - run:
          name: Do Release
          command: |
            .circleci/release.sh


workflows:
  version: 2

  run-tests:
    jobs:
      - "test-py36"
      - "test-py37"

  auto-build-test-and-deploy:
    triggers:
      - schedule:
          cron: "0 2 * * *"
          filters:
            branches:
              only:
                - develop
    jobs:
      - "test-py36"
      - "test-py37"
      - deploy:
          requires:
            - "test-py36"
            - "test-py37"

notify:
  webhooks:
    # gitter hook
    - url: https://webhooks.gitter.im/e/c834f258a8dd7abf82de