name: Test

on:
  push:
    branches:
      - develop
  pull_request:
  merge_group:
permissions: {}
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref || github.run_id }}
  cancel-in-progress: true
env:
  UV_VERSION: 0.8.4 # renovate: datasource=pypi depName=uv
jobs:
  tests:
    name: Run Tests
    if: github.actor != 'github-merge-queue[bot]'
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13', '3.14']
        operating-system: [windows-latest, macos-latest, ubuntu-latest]
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false
      - name: Install uv and Python
        uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6
        with:
          python-version: ${{ matrix.python-version }}
          version: ${{ env.UV_VERSION }}
      - name: Run tests not requiring optional dependencies
        id: core-tests
        run: uv run pytest -m 'not require_optional_deps' -n logical --cov --cov-branch --cov-report=xml --dist loadgroup --junit-xml core_test_results.xml
      - name: Run tests requiring optional dependencies
        if: ${{!cancelled() && steps.core-tests.outcome != 'skipped'}}
        run: uv run --group plugin-test pytest -m 'require_optional_deps' -n logical --cov --cov-append --cov-branch --cov-report=xml --dist loadgroup --junit-xml optional_test_results.xml
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1
        with:
          files: core_test_results.xml,optional_test_results.xml
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5
        with:
          fail_ci_if_error: true
          name: ${{ matrix.operating-system }}-${{ matrix.python-version }}
          token: ${{ secrets.CODECOV_TOKEN }}

  test-scripts:
    name: Test scripts
    if: github.actor != 'github-merge-queue[bot]'
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: '3.13' # renovate: datasource=python-version depName=python
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false
      - name: Install uv and Python
        uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          version: ${{ env.UV_VERSION }}
      - name: Run tests for scripts
        run: |
          uv export --no-hashes --output-file scripts/bundle_webui.txt --script scripts/bundle_webui.py
          uv run --isolated --no-project --with pytest --with vcrpy --with-requirements scripts/bundle_webui.txt -m pytest scripts/tests/test_bundle_webui.py
          uv export --no-hashes --output-file scripts/dev_tools.txt --script scripts/dev_tools.py
          uv run --isolated --no-project --with pytest --with vcrpy --with-requirements scripts/dev_tools.txt -m pytest scripts/tests/test_dev_tools.py
          uv export --no-hashes --output-file scripts/update_changelog.txt --script scripts/update_changelog.py
          uv run --isolated --no-project --with pytest --with vcrpy --with-requirements scripts/update_changelog.txt -m pytest scripts/tests/test_update_changelog.py

  test-results:
    name: Test results
    if: always() && github.event_name != 'push'
    needs:
      - tests
      - test-scripts
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe # v1.2.2
        with:
          jobs: ${{ toJSON(needs) }}
